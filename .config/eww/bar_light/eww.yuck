(
    defwindow newbar
    :monitor 0
    :exclusive "true"
    :stacking "fg"
    :windowtype "dock"
    :reserve (struts :distance "30px" :side "top")
    :wm-ignore false
    :geometry
    (
        geometry 
        ;:anchor "center"
        :width "96%"
        :height "4px"
        :x "0"
        :y "4px"
        :anchor "top center"
    )
    (newbar)
)

(defwidget newbar []
    (box :class "parent" :space-evenly "true" :orientation "h"
      (box :space-evenly "true" :class "tag-box" :space-evenly "false" :orientation "h" :halign "start"
          (tags))
          ;(numoftags))
      (box :space-evenly "true" :class "end-box" :space-evenly "false" :orientation "h" :halign "end"
          (icons)
          (poweroff)
          (menu)
          (time)
          (volume))))

;(defwidget newbar []
  ;(centerbox :class "parent" :space-evenly "true" :orientation "h"
    ;(workspaces)
    ;(user)
    ;(sides)))

;(defwidget sides []
    ;(box :class "parent-sides" :space-evenly "false" :orientation "h"
        ;(time)))

(defwidget time []
  (box :class "time" :orientation "h" :space-evenly "true" :halign "end"
    time))

(defwidget volume []
  (box :class "volume" :orientation "h" :space-evenly "true" :halign "end"
    volume))

(defwidget poweroff []
  (
      box :class "volume" :orientation "h" :space-evenly "true" :halign "end"
      (
          button
          :class "poweroff"
          :onclick "/home/termai/.config/eww/bar_light/scripts/dashopen.sh powerdash"
          "⏻"
      )
  )
)



(defwidget menu [] 
    (
        box :class "menu" :orientation "h" :space-evenly "true" :halign "end"
        (
            eventbox
            :onclick "/home/termai/.config/eww/bar_light/scripts/dashopen.sh appdash"
            :tooltip "Menu On Hover"
            "󰕮"
        )
    )
)


(defwidget numoftags [] 
    (
        box :class "numoftags" :orientation "h" :space-evenly "true" :halign "end"
        numoftags
    )
)



(
    defwidget icons []
    (
        literal :content icons_listen
    )

)





(
    defwidget tags []
    (
        literal :content tags_listen
    )
)
;defpoll


(defpoll time :interval "1s"
              :initial "initial-value"  ; optional, defaults to poll at startup
              :run-while time-visible   ; optional, defaults to 'true'
  `./scripts/time`)

(defpoll volume :interval "1s"
              :initial "initial-value"  ; optional, defaults to poll at startup
              :run-while time-visible   ; optional, defaults to 'true'
  `./scripts/sb-vol`)


(defpoll numoftags :interval "1s"
              :initial "initial-value"  ; optional, defaults to poll at startup
              :run-while time-visible   ; optional, defaults to 'true'
  `./scripts/numoftags.sh`)

(defpoll icons_listen :interval "1s"
              :initial "initial-value"  ; optional, defaults to poll at startup
              :run-while time-visible   ; optional, defaults to 'true'
  `./scripts/program1.sh`)


;deflisten

(deflisten tags_listen "./scripts/new.sh" )

;Widgets





